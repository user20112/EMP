/*
 * GaTask.h
 *
 *  Created on: 09.12.2014
 *      Author: s.hegemann
 */

#ifndef SOURCE_GAGCPPAPI_INCLUDE_SCHEDULER_GATASK_H_
#define SOURCE_GAGCPPAPI_INCLUDE_SCHEDULER_GATASK_H_

#include <string.h>

#include <gasched/task.h>

namespace GaGCppAPI {

    int32_t
    ga_task_init(void* userData);

    int32_t
    ga_task_deinit(void* userData);

    int32_t
    ga_task_run(void* userData,
                gs_Task taskHandle,
                const uint32_t* frameNumber);

    class GaTask
    {
        public:
            GaTask(std::string& _name);
            virtual ~GaTask();


            friend int32_t
            ga_task_init(void* userData);

            friend int32_t
            ga_task_deinit(void* userData);

            friend int32_t
            ga_task_run(void* userData,
                        gs_Task taskHandle,
                        const uint32_t* frameNumber);

        protected:
            virtual int32_t
            taskInit() noexcept = 0;

            virtual int32_t
            taskDeinit() noexcept = 0;

            virtual int32_t
            taskRun(gs_Task taskHandle,
                    const uint32_t* frameNumber) noexcept = 0;

            void
            updateStatistics();

            void
            waitNextFrame(const uint32_t  _framesToWait);

            std::string mName;

            gs_Task mTaskHandler;

            gs_TaskStatistics mStatistics;

    };

} /* namespace GaGCppAPI */

#endif /* SOURCE_GAGCPPAPI_INCLUDE_SCHEDULER_GATASK_H_ */

<map id="el::base::Writer" name="el::base::Writer">
<area shape="rect" id="node2" href="$classel_1_1base_1_1_no_copy.html" title="Internal helper class that prevent copy constructor for class." alt="" coords="5,5,128,112"/>
<area shape="rect" id="node10" href="$classel_1_1base_1_1threading_1_1internal_1_1_no_mutex.html" title="Mutex wrapper used when multi&#45;threading is disabled." alt="" coords="126,163,257,299"/>
<area shape="rect" id="node4" href="$classel_1_1base_1_1_message_builder.html" title="{el::base::MessageBuilder\n|+ m_containerLogSeperator\l|+ MessageBuilder()\l+ initialize()\l+ operator\&lt;\&lt;()\l+ ELPP_SIMPLE_LOG()\l+ operator\&lt;\&lt;()\l+ operator\&lt;\&lt;()\l+ writeIterator()\l}" alt="" coords="53,3052,235,3217"/>
<area shape="rect" id="node6" href="$classel_1_1_logger.html" title="Represents a logger holding ID and configurations we need to write logs." alt="" coords="259,2942,447,3327"/>
<area shape="rect" id="node8" href="$classel_1_1base_1_1threading_1_1_thread_safe.html" title="Base of thread safe class, this class is inheritable&#45;only." alt="" coords="403,363,532,514"/>
<area shape="rect" id="node15" href="$classel_1_1base_1_1_typed_configurations.html" title="Configurations with data types." alt="" coords="435,2301,628,2877"/>
<area shape="rect" id="node22" href="$classel_1_1base_1_1utils_1_1_abstract_registry.html" title="{el::base::utils::Abstract\lRegistry\&lt; Configuration,\l std::vector\&lt; Configuration * \&gt; \&gt;\n|&#45; m_list\l|+ AbstractRegistry()\l+ AbstractRegistry()\l+ operator==()\l+ operator!=()\l+ operator=()\l+ ~AbstractRegistry()\l+ begin()\l+ end()\l+ cbegin()\l+ cend()\l+ empty()\l+ size()\l+ list()\l+ list()\l+ unregisterAll()\l# deepCopy()\l# reinitDeepCopy()\l}" alt="" coords="79,984,285,1325"/>
<area shape="rect" id="node25" href="$classel_1_1base_1_1utils_1_1_abstract_registry.html" title="Abstract registry (aka repository) that provides basic interface for pointer repository specified by ..." alt="" coords="242,579,429,906"/>
<area shape="rect" id="node32" href="$classel_1_1base_1_1utils_1_1_abstract_registry.html" title="{el::base::utils::Abstract\lRegistry\&lt; T_Ptr, std::vector\l\&lt; T_Ptr * \&gt; \&gt;\n|&#45; m_list\l|+ AbstractRegistry()\l+ AbstractRegistry()\l+ operator==()\l+ operator!=()\l+ operator=()\l+ ~AbstractRegistry()\l+ begin()\l+ end()\l+ cbegin()\l+ cend()\l+ empty()\l+ size()\l+ list()\l+ list()\l+ unregisterAll()\l# deepCopy()\l# reinitDeepCopy()\l}" alt="" coords="311,984,492,1325"/>
<area shape="rect" id="node13" href="$classel_1_1_loggable.html" title="Base of Easylogging++ friendly class." alt="" coords="157,2543,259,2635"/>
<area shape="rect" id="node18" href="$classel_1_1_configurations.html" title="Thread&#45;safe Configuration repository." alt="" coords="256,1939,408,2237"/>
<area shape="rect" id="node20" href="$classel_1_1base_1_1utils_1_1_registry_with_pred.html" title="{el::base::utils::Registry\lWithPred\&lt; Configuration,\l Configuration::Predicate \&gt;\n||+ RegistryWithPred()\l+ RegistryWithPred()\l+ ~RegistryWithPred()\l+ operator=()\l# unregisterAll()\l# unregister()\l# registerNew()\l# get()\l&#45; deepCopy()\l}" alt="" coords="244,1664,420,1888"/>
<area shape="rect" id="node30" href="$classel_1_1base_1_1utils_1_1_registry_with_pred.html" title="A pointer registry mechanism to manage memory and provide search functionalities. (predicate version)..." alt="" coords="278,1377,444,1586"/>
</map>

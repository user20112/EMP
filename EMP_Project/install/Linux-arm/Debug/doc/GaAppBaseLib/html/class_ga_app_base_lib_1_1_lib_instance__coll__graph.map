<map id="GaAppBaseLib::LibInstance" name="GaAppBaseLib::LibInstance">
<area shape="rect" id="node2" href="$class_ga_app_base_lib_1_1_module_interface.html" title="interface definition for external GaApp Modules." alt="" coords="289,3392,497,3587"/>
<area shape="rect" id="node4" href="$classel_1_1_logger.html" title="Represents a logger holding ID and configurations we need to write logs." alt="" coords="299,2942,487,3327"/>
<area shape="rect" id="node6" href="$classel_1_1base_1_1threading_1_1_thread_safe.html" title="Base of thread safe class, this class is inheritable&#45;only." alt="" coords="413,363,541,514"/>
<area shape="rect" id="node14" href="$classel_1_1base_1_1_typed_configurations.html" title="Configurations with data types." alt="" coords="421,2301,613,2877"/>
<area shape="rect" id="node21" href="$classel_1_1base_1_1utils_1_1_abstract_registry.html" title="{el::base::utils::Abstract\lRegistry\&lt; Configuration,\l std::vector\&lt; Configuration * \&gt; \&gt;\n|&#45; m_list\l|+ AbstractRegistry()\l+ AbstractRegistry()\l+ operator==()\l+ operator!=()\l+ operator=()\l+ ~AbstractRegistry()\l+ begin()\l+ end()\l+ cbegin()\l+ cend()\l+ empty()\l+ size()\l+ list()\l+ list()\l+ unregisterAll()\l# deepCopy()\l# reinitDeepCopy()\l}" alt="" coords="29,984,235,1325"/>
<area shape="rect" id="node24" href="$classel_1_1base_1_1utils_1_1_abstract_registry.html" title="Abstract registry (aka repository) that provides basic interface for pointer repository specified by ..." alt="" coords="194,579,381,906"/>
<area shape="rect" id="node31" href="$classel_1_1base_1_1utils_1_1_abstract_registry.html" title="{el::base::utils::Abstract\lRegistry\&lt; T_Ptr, std::vector\l\&lt; T_Ptr * \&gt; \&gt;\n|&#45; m_list\l|+ AbstractRegistry()\l+ AbstractRegistry()\l+ operator==()\l+ operator!=()\l+ operator=()\l+ ~AbstractRegistry()\l+ begin()\l+ end()\l+ cbegin()\l+ cend()\l+ empty()\l+ size()\l+ list()\l+ list()\l+ unregisterAll()\l# deepCopy()\l# reinitDeepCopy()\l}" alt="" coords="260,984,441,1325"/>
<area shape="rect" id="node8" href="$classel_1_1base_1_1threading_1_1internal_1_1_no_mutex.html" title="Mutex wrapper used when multi&#45;threading is disabled." alt="" coords="411,163,543,299"/>
<area shape="rect" id="node10" href="$classel_1_1base_1_1_no_copy.html" title="Internal helper class that prevent copy constructor for class." alt="" coords="416,5,539,112"/>
<area shape="rect" id="node12" href="$classel_1_1_loggable.html" title="Base of Easylogging++ friendly class." alt="" coords="294,2543,396,2635"/>
<area shape="rect" id="node17" href="$classel_1_1_configurations.html" title="Thread&#45;safe Configuration repository." alt="" coords="105,1939,257,2237"/>
<area shape="rect" id="node19" href="$classel_1_1base_1_1utils_1_1_registry_with_pred.html" title="{el::base::utils::Registry\lWithPred\&lt; Configuration,\l Configuration::Predicate \&gt;\n||+ RegistryWithPred()\l+ RegistryWithPred()\l+ ~RegistryWithPred()\l+ operator=()\l# unregisterAll()\l# unregister()\l# registerNew()\l# get()\l&#45; deepCopy()\l}" alt="" coords="93,1664,269,1888"/>
<area shape="rect" id="node29" href="$classel_1_1base_1_1utils_1_1_registry_with_pred.html" title="A pointer registry mechanism to manage memory and provide search functionalities. (predicate version)..." alt="" coords="199,1377,365,1586"/>
</map>
